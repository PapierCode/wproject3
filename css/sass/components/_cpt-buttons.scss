/**
*
* Boutons
*
**/


@use "../var-sass" as *;
@use "../mixins" as *;
@use "../helpers" as *;

.button, .button:visited {
	
	display: inline-flex;
	align-items: center;

	height: rem($button-size);
	padding:rem(0,$button-space);

	background-color: $black;

	@include font(900);
	font-size:rem(16);
	text-decoration: none;
	color:$white;
	text-transform: uppercase;

	transition:all .3s ease;
	
	.txt {}
	.txt:nth-child(2) {
		margin-left: rem($button-space);
	}
	.txt:nth-last-child(2) {
		margin-right: rem($button-space);
	}

	.ico {}
	svg {
		display: block;
		width: rem($button-ico-size);
		height: rem($button-ico-size);
		fill:$white;
		transition:fill .3s ease;
	}

	&:hover, &:focus {
		background-color: $green;
		color:$black;
		transition:all .3s ease;

		svg {
			fill:$black;
			transition:fill .3s ease;
		}
	}	
	
	.active { outline:none; }
	&:disabled {
		background-color: transparent;
		color: $grey;
		border: $border;
		cursor: default;

		&:hover, &:focus {
			outline:none;
		   	background-color: transparent;
		   	color: $grey;
		}
	}
}

.button--inline {
	font-size:inherit;
	font-family: $font-default;
	text-transform: none;
	padding:rem(0,.5*$button-space);
	height: auto;

	svg {
		width: rem(10);
		height: rem(10);
	}
}

.button--xl {
	font-size:rem(20);

	svg {
		width: auto;
		height: auto;
	}

	@media ( min-width : em($mq-layout-l) ) {
		font-size: rem(24);
		padding:rem(0,2*$button-space);
		height: rem(1.2*$button-size);
	}
}

.button--red {
	background-color: $red;
	color:$black;
}
.button--orange {
	background-color: $orange;
	color:$black;
}
.button--arrow {
	.ico {
		transform: rotate(180deg);
	}
}
