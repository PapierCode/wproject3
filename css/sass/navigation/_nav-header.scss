/**
*
* Navigation dans l'entÃªte
*
** Bouton ouvrir/fermer
** Container
** Liste
** Lien
*
*
**/


@use "../var-sass" as *;
@use "../mixins" as *;
@use "../helpers" as *;
@use "../components/cpt-buttons" as *;


/*============================================
=            Bouton ouvrir/fermer            =
============================================*/

.h-nav-btn {
	@extend .button;
	
    position: relative;
	z-index: 999;
	order: 3;
	justify-self: end;

	.txt {
		position: absolute;
		left: -666em;
		white-space: nowrap;
	}

	@media ( min-width : em($mq-layout-l) ) {
		grid-column: span 2 / -1;

		.txt {
			position: static;
			overflow: hidden;
			max-width: rem(100);
			transition: all .5s ease;
		}	
		.h-nav-is-open & {
			.txt {
				max-width: 0;
				margin:0;
				transition: all .5s ease;
			}
		}
	}
	@media ( min-width : em($mq-layout-xxl) ) {
		display:none;
	}
}

.h-nav-btn-ico {	

	$line-w : 16;
	$line-h : 2;
	$arrow-translate : 7;
	$t-ico : .6s;

	width: rem($line-w);
	height: rem($button-size);
	position: relative;

	overflow: hidden;
	&::before, &::after {
		content: "";
		width: rem($line-w);
		height: rem($line-h);
		position: absolute;
		z-index: 1;
		top:50%;
		left:50%;
		margin: rem(-.5*$line-h,0,0,-.5*$line-w);
		background-color: $white;
		transform-origin:center center 0;
		transition:all $t-ico ease;
	}
	&::before { transform:translateY(rem(-$arrow-translate)); }
	&::after { transform:translateY(rem($arrow-translate)); }

	.h-nav-is-open & {

		&::before, &::after { transition:all $t-ico ease; }
		&::before { transform: translateY(0) rotate(-45deg); }
		&::after { transform: translateY(0) rotate(45deg); }
	}

	.h-nav-btn:hover &, .h-nav-btn:focus & {

		&::before, &::after {
			background-color: $black;
			transition:all $t-ico ease;
			width: rem(.75*$line-w);
		}
		&::before {
			transform: translate(rem(.5*$arrow-translate),0) rotate(45deg);
			transform-origin: left top;
		}
		&::after {
			transform: translate(rem(.5*$arrow-translate),0) rotate(-45deg);
			transform-origin: left bottom;
		}
	}

	.h-nav-is-open .h-nav-btn:hover &, .h-nav-is-open .h-nav-btn:focus & {

		&::before {
			transform: translateY(0) rotate(-45deg);
			transform-origin: right top;
		}
		&::after {
			transform: translateY(0) rotate(45deg);
			transform-origin: right bottom;
		}
	}
}
.h-nav-btn-ico--inner {
	display: block;
	&::before { display:none; }
	&::after { transform:none; }
	
	.h-nav-is-open & {
		&::after { transform: translateX(rem(100)); }
	}

	.h-nav-is-open .h-nav-btn:hover &, .h-nav-is-open .h-nav-btn:focus &,
	.h-nav-btn:hover &, .h-nav-btn:focus & {
		&::after { transform: translateX(rem(100)); }
	}
}


/*=====  FIN Bouton ouvrir/fermer  =====*/

/*=================================
=            Container            =
=================================*/

.h-nav {
	position: fixed;
	z-index: 888;
	top: 0;
	left: 100%;
	bottom: 0;
	width: 100%;
	display: flex;
	justify-content: flex-end;
	overflow: hidden;
	transition:left 0s ease $t-toggle-nav, background-color $t-toggle-nav ease;

	.h-nav-is-open & {
		left:0;
		background-color: rgba($black,.6);
		cursor: pointer;
		transition:background-color $t-toggle-nav ease;
	}

	@media ( min-width : em($mq-layout-xxl) ) {
		position: static;
		overflow: visible;
		display: block;
		width: auto;
		transition: none;
		background-color: transparent;

		grid-column: span 9;
		justify-self: end;
		align-self: end;

		.h-nav-is-open & {
			width: auto;
			background-color: transparent;
			cursor: default;
			transition:none;
		}
	}
}

.h-nav-inner {
	width: 100vw;
	height: 100%;
	padding: calc( #{rem($button-size)} + 2*var(--space) ) var(--space) var(--space);
	background-color: $yellow;
	transform: translateX(100%);
	transition: transform $t-toggle-nav ease;
	overflow-y: scroll;

	.h-nav-is-open & {
		transform: translateX(0);
		cursor: default;
		transition: transform $t-toggle-nav ease;
	}
	
	@media ( min-width : em($mq-layout-m) ) {
		width:80vw;
	}
	@media ( min-width : em($mq-layout-l) ) {
		width:60vw;
	}
	@media ( min-width : em($mq-layout-xxl) ) {
		background-color: transparent;
		width: auto;
		padding: 0;
		transform: none;
		transition: none;
		overflow-y: visible;
		display: flex;

		.h-nav-is-open & {
			transform: none;
			transition: none;
		}
	}
}


/*=====  FIN Container  =====*/

/*=============================
=            Liste            =
=============================*/

/*----------  Commun  ----------*/

.h-nav-list {

	@media ( min-width : em($mq-layout-xxl) ) {
		display: flex;
		flex-wrap: wrap;
	}
}

.h-nav-item {
	margin-top:rem($button-space);
}


/*----------  Level 1  ----------*/

.h-p-nav-list--l1 {}

.h-p-nav-item--l1 {

	&:first-child {
		margin-top:0;
	}

	@media ( min-width : em($mq-layout-xxl) ) {
		margin-top:0;

		&:nth-child(n+2) {
			margin-left:rem($button-space);
		}		
	}
}


/*----------  Level 2  ----------*/

.h-p-nav-box--l2 {
	visibility: hidden;
	overflow-y: hidden;
	transition: max-height .5s ease;

	.is-open & {
		transition: max-height 1s ease;
	}

	@media ( min-width : em($mq-layout-xxl) ) {
		position: absolute;
	}

}
.h-p-nav-list--l2 {
	margin-left:var(--space);

	@media ( min-width : em($mq-layout-xxl) ) {
		flex-direction: column;
		flex-wrap: nowrap;
		margin-left:0;
	}
}

.h-p-nav-item--l2 {
	position: relative;
}

.h-p-nav-title--l2 {
	margin:0;
}


/*=====  FIN Liste  =====*/

/*============================
=            Lien            =
============================*/

.h-nav-link, .h-nav-link:visited {
	@extend .button;
	display: inline-flex;
	text-transform: none;
	@include font();
	color:$white;

	.is-active > & {
		background-color: $white;
		color: $black;
	}
	&:hover, &:focus {
		background-color: $green;
		color: $black;
	}

	@media ( min-width : em($mq-layout-xl) ) {

		.is-active > & {
			background-color: $blue;
			color: $black;
		}
		&:hover, &:focus {
			background-color: $green;
			color: $black;
		}
	}
}

.h-nav-link-inner {}


/*=====  FIN Lien  =====*/
